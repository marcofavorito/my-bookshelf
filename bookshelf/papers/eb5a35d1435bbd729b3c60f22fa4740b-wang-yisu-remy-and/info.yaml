abstract: Most work on query optimization has concentrated on loop-free queries. However,
  data science and machine learning workloads today typically involve recursive or
  iterative computation. In this work, we propose a novel framework for optimizing
  recursive queries using methods from program synthesis. In particular, we introduce
  a simple yet powerful optimization rule called the "FGH-rule" which aims to find
  a faster way to evaluate a recursive program. The solution is found by making use
  of powerful tools, such as a program synthesizer, an SMT-solver, and an equality
  saturation system. We demonstrate the strength of the optimization by showing that
  the FGH-rule can lead to speedups up to 4 orders of magnitude on three, already
  optimized Datalog systems.
archiveprefix: arXiv
author: Wang, Yisu Remy and Khamis, Mahmoud Abo and Ngo, Hung Q. and Pichler, Reinhard
  and Suciu, Dan
author_list:
- family: Wang
  given: Yisu Remy
- family: Khamis
  given: Mahmoud Abo
- family: Ngo
  given: Hung Q.
- family: Pichler
  given: Reinhard
- family: Suciu
  given: Dan
eprint: 2202.10390v1
file: 2202.10390v1.pdf
files:
- wang-yisu-remy-and-khamis-mahmoud-abo-and-ngo-hung-q.-and-pichler-reinhard-and-suciu-danoptimizing-recursive-queries-with-program-synthesis2022.pdf
month: Feb
primaryclass: cs.DB
ref: 2202.10390v1
time-added: 2022-08-05-10:12:00
title: Optimizing Recursive Queries with Program Synthesis
type: article
url: http://arxiv.org/abs/2202.10390v1
year: '2022'
