abstract: Distributed systems are notorious for harboring subtle bugs. Verification
  can, in principle, eliminate these bugs, but it has historically been difficult
  to apply at full-program scale, much less distributed system scale. We describe
  a methodology for building practical and provably correct distributed systems based
  on a unique blend of temporal logic of actions-style state-machine refinement and
  Hoare-logic verification. We demonstrate the methodology on a complex implementation
  of a Paxos-based replicated state machine library and a lease-based sharded key-value
  store. We prove that each obeys a concise safety specification as well as desirable
  liveness requirements. Each implementation achieves performance competitive with
  a reference system. With our methodology and lessons learned, we aim to raise the
  standard for distributed systems from tested to correct.
address: New York, NY, USA
author: Hawblitzel, Chris and Howell, Jon and Kapritsos, Manos and Lorch, Jacob R.
  and Parno, Bryan and Roberts, Michael L. and Setty, Srinath and Zill, Brian
author_list:
- family: Hawblitzel
  given: Chris
- family: Howell
  given: Jon
- family: Kapritsos
  given: Manos
- family: Lorch
  given: Jacob R.
- family: Parno
  given: Bryan
- family: Roberts
  given: Michael L.
- family: Setty
  given: Srinath
- family: Zill
  given: Brian
doi: 10.1145/3068608
issn: 0001-0782
issue_date: July 2017
journal: Commun. ACM
month: jun
number: '7'
numpages: '10'
pages: 83â€“92
publisher: Association for Computing Machinery
ref: 10.1145/3068608
time-added: 2022-05-03-22:06:41
title: 'IronFleet: Proving Safety and Liveness of Practical Distributed Systems'
type: article
url: https://doi.org/10.1145/3068608
volume: '60'
year: '2017'
